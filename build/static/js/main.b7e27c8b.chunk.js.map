{"version":3,"sources":["components/header.js","components/news_list_item.js","components/news_list.js","index.js"],"names":["Header","props","react_default","a","createElement","className","style","color","textAlign","placeholder","type","onChange","keywords","NewsItem","_ref","item","title","feed","NewsList","items","news","map","news_list_item","key","id","children","App","state","JSON","filtered","getKeyword","event","keyword","target","value","_this","filter","indexOf","setState","newsFiltered","this","newsWhole","margin","header","news_list","length","Component","ReactDOM","render","src_App","document","querySelector"],"mappings":"kNAqBeA,QAjBA,SAACC,GAER,OACIC,EAAAC,EAAAC,cAAA,cACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAAf,QACAH,EAAAC,EAAAC,cAAA,SACIE,MAAO,CAACC,MAAO,SAAUC,UAAW,UACpCC,YAAY,yBACZC,KAAK,OAELC,SAAUV,EAAMW,cCGrBC,EAbE,SAAAC,GAAW,IAATC,EAASD,EAATC,KAGf,OACIb,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,UAAKW,EAAKC,OACVd,EAAAC,EAAAC,cAAA,WACKW,EAAKE,QCcPC,EArBE,SAACjB,GAGd,IAAMkB,EAAQlB,EAAMmB,KAAKC,IAAI,SAACN,GAC1B,OAEIb,EAAAC,EAAAC,cAACkB,EAAD,CAAUC,IAAKR,EAAKS,GAAIT,KAAMA,MAMtC,OACIb,EAAAC,EAAAC,cAAA,WACKH,EAAMwB,SACNN,ICNPO,6MAEFC,MAAQ,CAEJP,KAAKQ,EAELC,SAAS,MAIbC,WAAa,SAACC,GAIV,IAAIC,EAAUD,EAAME,OAAOC,MAIvBL,EAAWM,EAAKR,MAAMP,KAAKgB,OAAO,SAACrB,GACnC,OAAOA,EAAKC,MAAMqB,QAAQL,IAAY,IAK1CG,EAAKG,SAAS,CACVT,sFASJ,IAAIU,EAAeC,KAAKb,MAAME,SAC1BY,EAAYD,KAAKb,MAAMP,KAC3B,OAEIlB,EAAAC,EAAAC,cAAA,OAAKE,MAAO,CAACoC,OAAQ,OAOhBxC,EAAAC,EAAAC,cAACuC,EAAD,CAAQ/B,SAAU4B,KAAKV,aAEvB5B,EAAAC,EAAAC,cAACwC,EAAD,CAAUxB,KAA8B,IAAxBmB,EAAaM,OAAeJ,EAAYF,GACrDrC,EAAAC,EAAAC,cAAA,oCAhDF0C,aA0DlBC,IAASC,OAAO9C,EAAAC,EAAAC,cAAC6C,EAAD,MAAOC,SAASC,cAAc","file":"static/js/main.b7e27c8b.chunk.js","sourcesContent":["import React from 'react';\nimport '../css/styles.css'\n\n// functional comp receiveng props\nconst Header = (props) =>{\n    // return html\n        return ( \n            <header>\n                <div className='logo'>Logo</div>\n                <input  \n                    style={{color: 'orange', textAlign: 'center'}}\n                    placeholder=' filter news by title ' \n                    type=\"text\" \n                    // function (method) we received from app class component\n                    onChange={props.keywords}\n                />\n            </header>\n        )\n}\n\n// export to other modules\nexport default Header;","import React from 'react';\nimport '../css/styles.css'\n\n// shorhand prop syntax using destructaring\nconst NewsItem = ({item}) =>{\n    // instead of (props) argument we just specified the exact prop ({})\n    // render by return ()\n    return(\n        <div className='.news_item'>\n            <h3>{item.title}</h3>\n            <div>\n                {item.feed}\n            </div>\n        </div> \n    )\n}\n\nexport default NewsItem;\n\n","import React from 'react';\nimport NewsItem from './news_list_item';\n\n// func comp with props obj\nconst NewsList = (props) =>{\n\n    // create html markup based on news json object we got from index.js\n    const items = props.news.map((item)=>{\n        return(\n            // react prefer to have keys for array elements so we added key prop - object.id \n            <NewsItem key={item.id} item={item}/>\n            // so we got array with multiple <newsItem> components \n        )\n    });\n\n    // now render them\n    return (\n        <div>\n            {props.children}\n            {items}\n        </div>\n    )\n}\n\n// what we export by default (our functional component)\nexport default NewsList;","// import React and Component class from it\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\n\n// json file with array of objects (news items)\nimport JSON from './db.json';\n\n// COMPONENTS\nimport Header from './components/header';\nimport NewsList from  './components/news_list';\n\n\n// class based comp\nclass App extends Component {\n    // state object\n    state = {\n        // assigned json object (array) to news;\n        news:JSON,\n        // filtered data empty property (array)\n        filtered:[]\n    }\n\n    // text typing interceptor method\n    getKeyword = (event) => {\n        //console.log(event.target.value)\n\n        // get input value\n        let keyword = event.target.value;\n        \n        // using filter array method for news array\n        // if news has keyword in title (i.e. has indes > -1) return it\n        let filtered = this.state.news.filter((item)=>{\n            return item.title.indexOf(keyword) > -1\n        });\n        // now new array of filtered news produced (in filtered)\n\n        // setState to change state property (assign filterted var to filtered prop)\n        this.setState({\n            filtered\n            // instead of filtered: filtered (using destructuring)\n        })\n       // console.log(filtered)\n    }\n\n    // render method\n    render(){\n        // shorhand variables for raw news array and filtered array\n        let newsFiltered = this.state.filtered;\n        let newsWhole = this.state.news\n        return (\n\n            <div style={{margin: '2%'}}>\n                  {/*\n                render header\n                passing keyword func as prop \n        let newsFiltered = this.state.filtered;\n                then render newslist (logical expression if newsFiltered empty or not)  \n                */}\n                 <Header keywords={this.getKeyword}/>\n                 \n                 <NewsList news={newsFiltered.length === 0 ? newsWhole : newsFiltered}>\n                    <h3>\n                        The news are:\n                    </h3>\n                 </NewsList>\n            </div>\n        )\n    }  \n}\n\n// reactDom renders our parent class component to #root\nReactDOM.render(<App/>,document.querySelector('#root'));\n"],"sourceRoot":""}